(begin-tx)
(env-exec-config ["DisablePact44"])
(define-keyset 'k (sig-keyset))

(module yield-rollback 'k

  (defpact cross-chain (n:string)

    "Show that a mix of rollbacks with yield/resume pairs \
    \is fine, as long as rollbacks do not occur in the    \
    \same step as a yield."

    (step-with-rollback
      (let ((nn (+ n "[1]-")))
        (yield { "n" : nn })
        nn)
     "rollback-1")

    (step
      (resume { "n" := nn }
        (let ((nnn (+ nn "[2]-")))
          (yield { "n" : nnn } "1")
          nnn)))

    (step
      (resume { "n" := nnn }
        (+ nnn "[3]-end")))
    )

)

(module yield-rollback-failure 'k

  (defpact cross-chain-failure (n:string)

    "Show that steps with rollbacks and yield in the \
    \same step fails at runtime, and fails tc."

    (step-with-rollback
      (let ((nn (+ n "[1]-")))
        (yield { "n" : nn })
        nn)
     "rollback-1")

    (step-with-rollback
      (resume { "n" := nn }
        (let ((nnn (+ nn "[2]-")))
          (yield { "n" : nnn } "1")
          nnn))
      "rollback-2")

    (step
      (resume { "n" := nnn }
        (+ nnn "[3]-end")))
    )
)

(commit-tx)

;;; begin tests for yield-rollback

(use yield-rollback)

;; set chain id to something sane
(env-chain-data { "chain-id": "0" })
(env-hash (hash "emily-pact-id"))

;; expect successful output which primes the yiel
(expect "step 0 executes" "start-[1]-" (cross-chain "start-"))

(env-chain-data { "chain-id" : "1" })
(expect "step 1 executes on chain 1" "start-[1]-[2]-" (continue-pact 1))
(expect "step 2 executes" "start-[1]-[2]-[3]-end" (continue-pact 2))

;;; begin tests for yield-rollback-failure

(pact-state true)

(use yield-rollback-failure)

;; set chain id to something sane
(env-chain-data { "chain-id": "0" })
(env-hash (hash "emily-pact-id"))

;; expect successful output which primes the yiel
(expect "step 0 executes" "start-[1]-" (cross-chain-failure "start-"))

(env-chain-data { "chain-id" : "1" })
(expect-failure "step 1 fails to execute on chain 1 due to rollback" (continue-pact 1))
(expect-failure
  "typechecking fails for defpacts with rollbacks and yield in the same step"
  (typecheck 'yield-rollback-failure))
