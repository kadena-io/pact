;; Define a module schema, and use in an abstract interface
(begin-tx)
(define-keyset 'test-keyset (sig-keyset))
(module test-module 'test-keyset
  @doc "schema test module"

  (defschema account 
    @doc "dummy account schema"
    @model [(invariant (>= balance 0.0))]
    balance:decimal
    amount:decimal
    ccy:string
    auth:string
    )
)
(commit-tx)
(begin-tx)
(interface test-sig  
  (use test-module)

  (defun test-1:object{account} (x:object{account}))
)
(commit-tx)

(module test-impl 'test-keyset
  @doc "test if implementing test-sig resolves schema type"
  
  (use test-module)
  (implements test-sig)

  (deftable accounts:{account}
    "test reference")

  (defun test-1:object{account} (x:object{account})
    x)
)
    
