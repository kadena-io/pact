;; lib.repl: test REPL-only functions


(expect "env-hash" "Set tx hash to YQo" (env-hash "YQo"))

;; versions of base64-bytestring < 1.2 accept invalid base64 encodings. The
;; following test case is expected to fail after upgrading to
;; base64-bytestring > 1.2.0.0. This would be a breaking change and it must
;; be guaranteed that mainnet history isn't affected.
;; (expect-failure "env-hash invalid base64" (env-hash "aa"))
(expect "env-hash invalid base64" "Set tx hash to aa" (env-hash "aa"))

;; TODO use expect-that for above tests
(expect-that "expect-that test" (< 2) (+ 1 2))

(expect
 (format "{}" ["expect: computed docstring"]) 1 1)
(expect-that
 (format "{}" ["expect-that: computed docstring"]) (= 1) 1)
(expect-failure
 (format "{}" ["expect-failure: computed docstring"])
 (enforce false "unforced error"))


;; test with-applied-env and multiple env updates,
;; plus that env reverts
(env-data { 'h: ["h"] })
(env-keys ["h"])
(let ((x 0))
  (env-data { 'k: ["k"] })
  (env-keys ["k"])
  (with-applied-env
   [(expect
     "applied env has data and keys"
     true (enforce-keyset (read-keyset 'k)))
    (expect-failure
     "outside env gone"
     (read-keyset 'h))
    ]))
(expect
 "old env restored"
 true (enforce-keyset (read-keyset 'h)))
(expect-failure
 "applied env gone"
 (read-keyset 'k))
