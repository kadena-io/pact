stages:
  - build
  - bench
  # - deploy

pact-macos:
  stage: build
  tags:
    - macos
  script:
    - nix-build
    - nix-build -A ghc.pact.doc
    # - ./collectArtifacts.sh macos
  # artifacts:
  #   paths:
  #   - public-macos/

# pact-macos:
#   stage: bench
#   tags:
#      - macos
#   script:
#     - nix-shell
#     - cabal bench

pact-linux:
  stage: build
  tags:
    - linux
  script:
    - nix-build
#    - ./collectArtifacts.sh linux
#  artifacts:
#    paths:
#    - public-linux/

pact-linux:
  stage: bench
  tags:
     - linux
  script:
    - nix-shell
    - cabal bench

# deploy-nix-cache:
#   stage: deploy
#   allow_failure: true
#   script:
#     - if [ ! "$CACHIX_SIGNING_KEY" = "" ]; then nix-instantiate | cachix push pact fi
#     - if [ ! "$CACHIX_SIGNING_KEY" = "" ]; then nix-instantiate shell.nix | cachix push pact fi

# pages:
#   stage: deploy
#   script:
#     - mkdir public
#     - mv public-macos public/
# #    - mv public-linux public/
#   artifacts:
#     paths:
#     - public/

# pact-linux-static:
#   stage: build
#   script:
#     - nix-build static.nix --argstr system x86_64-linux
#   tags:
#     - linux
